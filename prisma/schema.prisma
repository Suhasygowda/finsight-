// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id           String        @id @default(cuid())
  name         String        @unique
  color        String        @default("#3B82F6")
  icon         String        @default("DollarSign")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  transactions Transaction[]
  budgets      Budget[]

  @@map("categories")
}

model Transaction {
  id          String   @id @default(cuid())
  amount      Float
  description String
  date        DateTime @default(now())
  type        String   @default("expense") // "income" or "expense"
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  sessionId   String?  // Optional session tracking for analytics
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("transactions")
}

model Budget {
  id         String   @id @default(cuid())
  amount     Float
  month      Int      // 1-12
  year       Int
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  sessionId  String?  // Optional session tracking
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([categoryId, month, year])
  @@map("budgets")
}

// New model to track global statistics
model AppStats {
  id                String   @id @default(cuid())
  totalUsers        Int      @default(0)
  totalTransactions Int      @default(0)
  totalMoneySaved   Float    @default(0)
  totalCategories   Int      @default(0)
  lastUpdated       DateTime @default(now())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("app_stats")
}

// New model to track user sessions (without auth)
model UserSession {
  id                String   @id @default(cuid())
  sessionId         String   @unique
  isActive          Boolean  @default(true)
  transactionCount  Int      @default(0)
  totalSpent        Float    @default(0)
  totalIncome       Float    @default(0)
  moneySaved        Float    @default(0) // Based on budget vs actual spending
  lastActivity      DateTime @default(now())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("user_sessions")
}